{"version":3,"sources":["components/AddContact/AddContact.module.css","components/OneContact/OneContact.module.css","components/FilterContacts/FilterConatcts.module.css","redux/actions/actions.js","redux/reducers/reducer.js","redux/reducers/rootReducer.js","redux/store.js","redux/operation/operations.js","redux/selectors/contacts-selectors.js","components/Alert/Alert.js","components/AddContact/AddContact.js","components/OneContact/OneContact.js","components/AllContacts/AllContacts.js","components/FilterContacts/FilterContacts.js","App.js","index.js"],"names":["module","exports","addContactRequest","createAction","addContactSuccess","addContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","removeContactRequest","removeContactSuccess","removeContactError","setFilter","items","createReducer","state","action","payload","_","filter","item","id","error","phonebookReducer","combineReducers","rootReducer","contacts","store","configureStore","reducer","axios","defaults","baseURL","process","getContacts","getFilter","getError","getVisibleContacts","createSelector","name","toLowerCase","includes","Alert","message","className","initState","number","alert","Phonebook","useState","setState","useSelector","dispatch","useDispatch","useEffect","get","then","data","result","Object","keys","map","key","catch","changeHandler","e","target","value","prevState","styles","form","autoComplete","onSubmit","preventDefault","contact","length","alertMessage","some","cont","post","inputName","type","placeholder","onChange","inputNumber","buttonAddContacts","CSSTransition","in","classNames","onEntered","timeout","unmountOnExit","OneContact","userDeleteHandler","listItem","contactName","contactNumber","deleteButton","data-id","onClick","AllContacts","event","dataset","delete","removeContact","TransitionGroup","component","FilterContacts","wrapper","App","appear","AddContact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea76dad4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddContact_form__3swa2\",\"inputName\":\"AddContact_inputName__2_4ya\",\"inputNumber\":\"AddContact_inputNumber__1Nsyu\",\"buttonAddContacts\":\"AddContact_buttonAddContacts__3ecAs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"OneContact_listItem__a8j5_\",\"contactName\":\"OneContact_contactName__2uuXy\",\"contactNumber\":\"OneContact_contactNumber__1wrkR\",\"deleteButton\":\"OneContact_deleteButton__2qBVP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"FilterConatcts_wrapper__22vG2\",\"inputName\":\"FilterConatcts_inputName__1gssl\",\"filter\":\"FilterConatcts_filter__DNU8T\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContactRequest = createAction(\"phonebook/addContactRequest\");\r\nexport const addContactSuccess = createAction(\"phonebook/addContactSuccess\");\r\nexport const addContactError = createAction(\"phonebook/addContactError\");\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  \"phonebook/fetchContactRequest\"\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  \"phonebook/fetchContactSuccess\"\r\n);\r\nexport const fetchContactsError = createAction(\"phonebook/fetchContactError\");\r\n\r\nexport const removeContactRequest = createAction(\r\n  \"phonebook/removeContactRequest\"\r\n);\r\nexport const removeContactSuccess = createAction(\r\n  \"phonebook/removeContactSuccess\"\r\n);\r\nexport const removeContactError = createAction(\"phonebook/removeContactError\");\r\n\r\nexport const setFilter = createAction(\"phonebook/setFilter\");\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addContactSuccess,\r\n  addContactError,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n  setFilter,\r\n} from \"../actions/actions\";\r\n\r\nconst items = createReducer([], {\r\n  [addContactSuccess]: (state, action) => [...state, action.payload],\r\n  [fetchContactsSuccess]: (_, action) => [...action.payload],\r\n  [removeContactSuccess]: (state, action) =>\r\n    state.filter((item) => item.id !== action.payload),\r\n});\r\nconst filter = createReducer(\"\", {\r\n  [setFilter]: (_, action) => action.payload,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [addContactError]: (_, action) => action.payload,\r\n  [addContactSuccess]: () => null,\r\n  [fetchContactsError]: (_, action) => action.payload,\r\n  [fetchContactsSuccess]: () => null,\r\n  [removeContactError]: (_, action) => action.payload,\r\n  [removeContactSuccess]: () => null,\r\n});\r\n\r\nconst phonebookReducer = combineReducers({\r\n  items,\r\n  filter,\r\n  error,\r\n});\r\n\r\nexport default phonebookReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport phonebookReducer from \"./reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: phonebookReducer,\r\n});\r\nexport default rootReducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\nexport default store;\r\n\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n//export default store\r\n","import axios from \"axios\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError,\r\n} from \"../actions/actions\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_BASE_URL;\r\n\r\nexport const addContact = (contact) => (dispatch) => {\r\n  dispatch(addContactRequest());\r\n  axios\r\n    .post(\"/contacts.json\", contact)\r\n    .then(({ data }) => {\r\n      dispatch(addContactSuccess({ ...contact, id: data.name }));\r\n    })\r\n    .catch((error) => dispatch(addContactError(error)));\r\n};\r\nexport const fetchContacts = () => (dispatch) => {\r\n  dispatch(fetchContactsRequest());\r\n  axios\r\n    .get(\"/contacts.json\")\r\n    .then(({ data }) => {\r\n      const result = Object.keys(data).map((key) => ({\r\n        id: key,\r\n        ...data[key],\r\n      }));\r\n      dispatch(fetchContactsSuccess(result));\r\n    })\r\n    .catch((error) => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nexport const removeContact = (id) => (dispatch) => {\r\n  dispatch(removeContactRequest());\r\n  axios\r\n    .delete(`/contacts/${id}.json`)\r\n    .then(() => dispatch(removeContactSuccess(id)))\r\n    .catch((error) => dispatch(removeContactError(error)));\r\n};\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContacts = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\nexport const getError = (state) => state.contacts.error;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (items, filter) =>\r\n    items.filter((item) =>\r\n      item.name.toLowerCase().includes(filter.toLowerCase())\r\n    )\r\n);\r\n","import React from \"react\";\r\nimport \"./Alert.css\";\r\n\r\nconst Alert = ({ message }) => {\r\n  return <div className=\"alert\">{message}</div>;\r\n};\r\n\r\nexport default Alert;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styles from \"./AddContact.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addContact, fetchContacts } from \"../../redux/operation/operations\";\r\nimport { getContacts } from \"../../redux/selectors/contacts-selectors\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport Alert from \"../Alert/Alert\";\r\n\r\nconst initState = {\r\n  name: \"\",\r\n  number: \"\",\r\n  alert: false,\r\n};\r\n\r\nconst Phonebook = () => {\r\n  const [state, setState] = useState({ ...initState });\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const changeHandler = (e) => {\r\n    const { name, value } = e.target;\r\n    setState((prevState) => ({ ...prevState, [name]: value }));\r\n  };\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = state;\r\n\r\n    if (!name || !number) {\r\n      return setState((prevState) => ({\r\n        ...prevState,\r\n        alert: true,\r\n        alertMessage: \"Please enter name and number!\",\r\n      }));\r\n    }\r\n    if (name.length < 2 || number.length < 2) {\r\n      return setState((prevState) => ({\r\n        ...prevState,\r\n        alert: true,\r\n        alertMessage: \"Please enter correct name and number!\",\r\n      }));\r\n    }\r\n\r\n    contacts.some((cont) => cont.name.toLowerCase() === name.toLowerCase())\r\n      ? setState((prevState) => ({\r\n          ...prevState,\r\n          alert: true,\r\n          alertMessage: `${name} is already in contacts!`,\r\n        }))\r\n      : dispatch(addContact({ name, number }));\r\n\r\n    setState((prevState) => ({ ...prevState, name: \"\", number: \"\" }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className={styles.form} autoComplete=\"off\" onSubmit={submitHandler}>\r\n        <input\r\n          className={styles.inputName}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Full Name\"\r\n          value={state.name}\r\n          onChange={changeHandler}\r\n        ></input>\r\n        <input\r\n          className={styles.inputNumber}\r\n          type=\"text\"\r\n          name=\"number\"\r\n          placeholder=\"Nubmer xxx-xx-xx\"\r\n          value={state.number}\r\n          onChange={changeHandler}\r\n        ></input>\r\n        <button type=\"submit\" className={styles.buttonAddContacts}>\r\n          Add contacts?\r\n        </button>\r\n      </form>\r\n      <CSSTransition\r\n        in={state.alert}\r\n        classNames=\"alert\"\r\n        onEntered={() =>\r\n          setState((prevState) => ({ ...prevState, alert: false }))\r\n        }\r\n        timeout={3000}\r\n        unmountOnExit\r\n      >\r\n        <Alert message={state.alertMessage} />\r\n      </CSSTransition>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Phonebook;\r\n","import React from \"react\";\r\nimport styles from \"./OneContact.module.css\";\r\n\r\nconst OneContact = ({ contact: { id, name, number }, userDeleteHandler }) => {\r\n  return (\r\n    <li className={styles.listItem}>\r\n      <p className={styles.contactName}>{name}</p>\r\n      <p className={styles.contactNumber}>{number}</p>\r\n      <button\r\n        className={styles.deleteButton}\r\n        data-id={id}\r\n        onClick={userDeleteHandler}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default OneContact;\r\n","import React from \"react\";\r\nimport OneContact from \"../OneContact/OneContact\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setFilter } from \"../../redux/actions/actions\";\r\nimport { removeContact } from \"../../redux/operation/operations\";\r\nimport { getVisibleContacts } from \"../../redux/selectors/contacts-selectors\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport \"./AllContacts.css\";\r\n\r\nconst AllContacts = () => {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const userDeleteHandler = (event) => {\r\n    const { id } = event.target.dataset;\r\n    dispatch(removeContact(id));\r\n    dispatch(setFilter(\"\"));\r\n  };\r\n\r\n  return (\r\n    <TransitionGroup component=\"ul\">\r\n      {contacts.map((contact) => (\r\n        <CSSTransition key={contact.id} timeout={250} classNames=\"listItem\">\r\n          <OneContact contact={contact} userDeleteHandler={userDeleteHandler} />\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nexport default AllContacts;\r\n","import React from \"react\";\r\nimport styles from \"./FilterConatcts.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getFilter } from \"../../redux/selectors/contacts-selectors\";\r\nimport { setFilter } from \"../../redux/actions/actions\";\r\n\r\nconst FilterContacts = () => {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const changeHandler = (event) => {\r\n    const { value } = event.target;\r\n    dispatch(setFilter(value));\r\n  };\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <p className={styles.inputName}>Find contacts by name</p>\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        placeholder=\"Enter name\"\r\n        onChange={changeHandler}\r\n        className={styles.filter}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FilterContacts;\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\nimport AddContact from \"./components/AddContact/AddContact\";\r\nimport AllContacts from \"./components/AllContacts/AllContacts\";\r\nimport FilterContacts from \"./components/FilterContacts/FilterContacts\";\r\nimport Alert from \"./components/Alert/Alert\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getContacts, getError } from \"./redux/selectors/contacts-selectors\";\r\n\r\nfunction App() {\r\n  const contacts = useSelector(getContacts);\r\n  const error = useSelector(getError);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <CSSTransition\r\n        in={true}\r\n        appear={true}\r\n        timeout={500}\r\n        classNames=\"titlePhonebook\"\r\n        unmountOnExit\r\n      >\r\n        <h1 className=\"titlePhonebook\">Phonebook</h1>\r\n      </CSSTransition>\r\n\r\n      <AddContact />\r\n\r\n      <CSSTransition\r\n        in={contacts.length > 1}\r\n        classNames=\"filter\"\r\n        timeout={250}\r\n        unmountOnExit\r\n      >\r\n        <FilterContacts />\r\n      </CSSTransition>\r\n\r\n      <AllContacts />\r\n\r\n      {error && <Alert message={error.message} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}